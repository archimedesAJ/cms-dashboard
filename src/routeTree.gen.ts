/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authIndexImport } from './routes/(auth)/index'
import { Route as appDashboardRouteImport } from './routes/(app)/dashboard/route'
import { Route as appDashboardIndexImport } from './routes/(app)/dashboard/index'
import { Route as appDashboardVisitorsImport } from './routes/(app)/dashboard/visitors'
import { Route as appDashboardPastorsAndBishopsImport } from './routes/(app)/dashboard/pastors-and-bishops'
import { Route as appDashboardEldersImport } from './routes/(app)/dashboard/elders'
import { Route as appDashboardDepartmentsImport } from './routes/(app)/dashboard/departments'
import { Route as appDashboardDeaconessesImport } from './routes/(app)/dashboard/deaconesses'
import { Route as appDashboardCommitteeImport } from './routes/(app)/dashboard/committee'
import { Route as appDashboardChildrenImport } from './routes/(app)/dashboard/children'
import { Route as appDashboardMembersIndexImport } from './routes/(app)/dashboard/members/index'
import { Route as appDashboardMembersCreateImport } from './routes/(app)/dashboard/members/create'
import { Route as appDashboardMembersProductIdEditImport } from './routes/(app)/dashboard/members/$productId.edit'

// Create/Update Routes

const authIndexRoute = authIndexImport.update({
  id: '/(auth)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardRouteRoute = appDashboardRouteImport.update({
  id: '/(app)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardIndexRoute = appDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardVisitorsRoute = appDashboardVisitorsImport.update({
  id: '/visitors',
  path: '/visitors',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardPastorsAndBishopsRoute =
  appDashboardPastorsAndBishopsImport.update({
    id: '/pastors-and-bishops',
    path: '/pastors-and-bishops',
    getParentRoute: () => appDashboardRouteRoute,
  } as any)

const appDashboardEldersRoute = appDashboardEldersImport.update({
  id: '/elders',
  path: '/elders',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardDepartmentsRoute = appDashboardDepartmentsImport.update({
  id: '/departments',
  path: '/departments',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardDeaconessesRoute = appDashboardDeaconessesImport.update({
  id: '/deaconesses',
  path: '/deaconesses',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardCommitteeRoute = appDashboardCommitteeImport.update({
  id: '/committee',
  path: '/committee',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardChildrenRoute = appDashboardChildrenImport.update({
  id: '/children',
  path: '/children',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardMembersIndexRoute = appDashboardMembersIndexImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardMembersCreateRoute = appDashboardMembersCreateImport.update({
  id: '/members/create',
  path: '/members/create',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardMembersProductIdEditRoute =
  appDashboardMembersProductIdEditImport.update({
    id: '/members/$productId/edit',
    path: '/members/$productId/edit',
    getParentRoute: () => appDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/': {
      id: '/(auth)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard/children': {
      id: '/(app)/dashboard/children'
      path: '/children'
      fullPath: '/dashboard/children'
      preLoaderRoute: typeof appDashboardChildrenImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/committee': {
      id: '/(app)/dashboard/committee'
      path: '/committee'
      fullPath: '/dashboard/committee'
      preLoaderRoute: typeof appDashboardCommitteeImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/deaconesses': {
      id: '/(app)/dashboard/deaconesses'
      path: '/deaconesses'
      fullPath: '/dashboard/deaconesses'
      preLoaderRoute: typeof appDashboardDeaconessesImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/departments': {
      id: '/(app)/dashboard/departments'
      path: '/departments'
      fullPath: '/dashboard/departments'
      preLoaderRoute: typeof appDashboardDepartmentsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/elders': {
      id: '/(app)/dashboard/elders'
      path: '/elders'
      fullPath: '/dashboard/elders'
      preLoaderRoute: typeof appDashboardEldersImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/pastors-and-bishops': {
      id: '/(app)/dashboard/pastors-and-bishops'
      path: '/pastors-and-bishops'
      fullPath: '/dashboard/pastors-and-bishops'
      preLoaderRoute: typeof appDashboardPastorsAndBishopsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/visitors': {
      id: '/(app)/dashboard/visitors'
      path: '/visitors'
      fullPath: '/dashboard/visitors'
      preLoaderRoute: typeof appDashboardVisitorsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof appDashboardIndexImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/members/create': {
      id: '/(app)/dashboard/members/create'
      path: '/members/create'
      fullPath: '/dashboard/members/create'
      preLoaderRoute: typeof appDashboardMembersCreateImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/members/': {
      id: '/(app)/dashboard/members/'
      path: '/members'
      fullPath: '/dashboard/members'
      preLoaderRoute: typeof appDashboardMembersIndexImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/members/$productId/edit': {
      id: '/(app)/dashboard/members/$productId/edit'
      path: '/members/$productId/edit'
      fullPath: '/dashboard/members/$productId/edit'
      preLoaderRoute: typeof appDashboardMembersProductIdEditImport
      parentRoute: typeof appDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface appDashboardRouteRouteChildren {
  appDashboardChildrenRoute: typeof appDashboardChildrenRoute
  appDashboardCommitteeRoute: typeof appDashboardCommitteeRoute
  appDashboardDeaconessesRoute: typeof appDashboardDeaconessesRoute
  appDashboardDepartmentsRoute: typeof appDashboardDepartmentsRoute
  appDashboardEldersRoute: typeof appDashboardEldersRoute
  appDashboardPastorsAndBishopsRoute: typeof appDashboardPastorsAndBishopsRoute
  appDashboardVisitorsRoute: typeof appDashboardVisitorsRoute
  appDashboardIndexRoute: typeof appDashboardIndexRoute
  appDashboardMembersCreateRoute: typeof appDashboardMembersCreateRoute
  appDashboardMembersIndexRoute: typeof appDashboardMembersIndexRoute
  appDashboardMembersProductIdEditRoute: typeof appDashboardMembersProductIdEditRoute
}

const appDashboardRouteRouteChildren: appDashboardRouteRouteChildren = {
  appDashboardChildrenRoute: appDashboardChildrenRoute,
  appDashboardCommitteeRoute: appDashboardCommitteeRoute,
  appDashboardDeaconessesRoute: appDashboardDeaconessesRoute,
  appDashboardDepartmentsRoute: appDashboardDepartmentsRoute,
  appDashboardEldersRoute: appDashboardEldersRoute,
  appDashboardPastorsAndBishopsRoute: appDashboardPastorsAndBishopsRoute,
  appDashboardVisitorsRoute: appDashboardVisitorsRoute,
  appDashboardIndexRoute: appDashboardIndexRoute,
  appDashboardMembersCreateRoute: appDashboardMembersCreateRoute,
  appDashboardMembersIndexRoute: appDashboardMembersIndexRoute,
  appDashboardMembersProductIdEditRoute: appDashboardMembersProductIdEditRoute,
}

const appDashboardRouteRouteWithChildren =
  appDashboardRouteRoute._addFileChildren(appDashboardRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/dashboard': typeof appDashboardRouteRouteWithChildren
  '/': typeof authIndexRoute
  '/dashboard/children': typeof appDashboardChildrenRoute
  '/dashboard/committee': typeof appDashboardCommitteeRoute
  '/dashboard/deaconesses': typeof appDashboardDeaconessesRoute
  '/dashboard/departments': typeof appDashboardDepartmentsRoute
  '/dashboard/elders': typeof appDashboardEldersRoute
  '/dashboard/pastors-and-bishops': typeof appDashboardPastorsAndBishopsRoute
  '/dashboard/visitors': typeof appDashboardVisitorsRoute
  '/dashboard/': typeof appDashboardIndexRoute
  '/dashboard/members/create': typeof appDashboardMembersCreateRoute
  '/dashboard/members': typeof appDashboardMembersIndexRoute
  '/dashboard/members/$productId/edit': typeof appDashboardMembersProductIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof authIndexRoute
  '/dashboard/children': typeof appDashboardChildrenRoute
  '/dashboard/committee': typeof appDashboardCommitteeRoute
  '/dashboard/deaconesses': typeof appDashboardDeaconessesRoute
  '/dashboard/departments': typeof appDashboardDepartmentsRoute
  '/dashboard/elders': typeof appDashboardEldersRoute
  '/dashboard/pastors-and-bishops': typeof appDashboardPastorsAndBishopsRoute
  '/dashboard/visitors': typeof appDashboardVisitorsRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/dashboard/members/create': typeof appDashboardMembersCreateRoute
  '/dashboard/members': typeof appDashboardMembersIndexRoute
  '/dashboard/members/$productId/edit': typeof appDashboardMembersProductIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)/dashboard': typeof appDashboardRouteRouteWithChildren
  '/(auth)/': typeof authIndexRoute
  '/(app)/dashboard/children': typeof appDashboardChildrenRoute
  '/(app)/dashboard/committee': typeof appDashboardCommitteeRoute
  '/(app)/dashboard/deaconesses': typeof appDashboardDeaconessesRoute
  '/(app)/dashboard/departments': typeof appDashboardDepartmentsRoute
  '/(app)/dashboard/elders': typeof appDashboardEldersRoute
  '/(app)/dashboard/pastors-and-bishops': typeof appDashboardPastorsAndBishopsRoute
  '/(app)/dashboard/visitors': typeof appDashboardVisitorsRoute
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(app)/dashboard/members/create': typeof appDashboardMembersCreateRoute
  '/(app)/dashboard/members/': typeof appDashboardMembersIndexRoute
  '/(app)/dashboard/members/$productId/edit': typeof appDashboardMembersProductIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/'
    | '/dashboard/children'
    | '/dashboard/committee'
    | '/dashboard/deaconesses'
    | '/dashboard/departments'
    | '/dashboard/elders'
    | '/dashboard/pastors-and-bishops'
    | '/dashboard/visitors'
    | '/dashboard/'
    | '/dashboard/members/create'
    | '/dashboard/members'
    | '/dashboard/members/$productId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/children'
    | '/dashboard/committee'
    | '/dashboard/deaconesses'
    | '/dashboard/departments'
    | '/dashboard/elders'
    | '/dashboard/pastors-and-bishops'
    | '/dashboard/visitors'
    | '/dashboard'
    | '/dashboard/members/create'
    | '/dashboard/members'
    | '/dashboard/members/$productId/edit'
  id:
    | '__root__'
    | '/(app)/dashboard'
    | '/(auth)/'
    | '/(app)/dashboard/children'
    | '/(app)/dashboard/committee'
    | '/(app)/dashboard/deaconesses'
    | '/(app)/dashboard/departments'
    | '/(app)/dashboard/elders'
    | '/(app)/dashboard/pastors-and-bishops'
    | '/(app)/dashboard/visitors'
    | '/(app)/dashboard/'
    | '/(app)/dashboard/members/create'
    | '/(app)/dashboard/members/'
    | '/(app)/dashboard/members/$productId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appDashboardRouteRoute: typeof appDashboardRouteRouteWithChildren
  authIndexRoute: typeof authIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  appDashboardRouteRoute: appDashboardRouteRouteWithChildren,
  authIndexRoute: authIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)/dashboard",
        "/(auth)/"
      ]
    },
    "/(app)/dashboard": {
      "filePath": "(app)/dashboard/route.tsx",
      "children": [
        "/(app)/dashboard/children",
        "/(app)/dashboard/committee",
        "/(app)/dashboard/deaconesses",
        "/(app)/dashboard/departments",
        "/(app)/dashboard/elders",
        "/(app)/dashboard/pastors-and-bishops",
        "/(app)/dashboard/visitors",
        "/(app)/dashboard/",
        "/(app)/dashboard/members/create",
        "/(app)/dashboard/members/",
        "/(app)/dashboard/members/$productId/edit"
      ]
    },
    "/(auth)/": {
      "filePath": "(auth)/index.tsx"
    },
    "/(app)/dashboard/children": {
      "filePath": "(app)/dashboard/children.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/committee": {
      "filePath": "(app)/dashboard/committee.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/deaconesses": {
      "filePath": "(app)/dashboard/deaconesses.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/departments": {
      "filePath": "(app)/dashboard/departments.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/elders": {
      "filePath": "(app)/dashboard/elders.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/pastors-and-bishops": {
      "filePath": "(app)/dashboard/pastors-and-bishops.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/visitors": {
      "filePath": "(app)/dashboard/visitors.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/": {
      "filePath": "(app)/dashboard/index.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/members/create": {
      "filePath": "(app)/dashboard/members/create.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/members/": {
      "filePath": "(app)/dashboard/members/index.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/members/$productId/edit": {
      "filePath": "(app)/dashboard/members/$productId.edit.tsx",
      "parent": "/(app)/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
